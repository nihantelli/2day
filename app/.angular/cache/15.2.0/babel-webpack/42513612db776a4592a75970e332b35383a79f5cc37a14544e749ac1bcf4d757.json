{"ast":null,"code":"export function barcodeValidator() {\n  var validationFunction = control => {\n    const value = control.value;\n    if (!value) return null;\n    const hasUpperCase = /[A-Z]+/.test(value);\n    const hasLowerCase = /[a-z]+/.test(value);\n    const hasNumeric = /[0-9]+/.test(value);\n    const isValid = hasUpperCase && hasLowerCase && hasNumeric;\n    return isValid ? null : {\n      barcodeFormat: true\n    };\n  };\n  return validationFunction;\n}","map":{"version":3,"mappings":"AAOA,OAAM,SAAUA,gBAAgB;EAC9B,IAAIC,kBAAkB,GACpBC,OAAwB,IACG;IAC3B,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAE3B,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;IAEvB,MAAMC,YAAY,GAAG,QAAQ,CAACC,IAAI,CAACF,KAAK,CAAC;IACzC,MAAMG,YAAY,GAAG,QAAQ,CAACD,IAAI,CAACF,KAAK,CAAC;IACzC,MAAMI,UAAU,GAAG,QAAQ,CAACF,IAAI,CAACF,KAAK,CAAC;IAEvC,MAAMK,OAAO,GAAGJ,YAAY,IAAIE,YAAY,IAAIC,UAAU;IAE1D,OAAOC,OAAO,GAAG,IAAI,GAAG;MAAEC,aAAa,EAAE;IAAI,CAAE;EACjD,CAAC;EAED,OAAOR,kBAAkB;AAC3B","names":["barcodeValidator","validationFunction","control","value","hasUpperCase","test","hasLowerCase","hasNumeric","isValid","barcodeFormat"],"sourceRoot":"","sources":["C:\\Users\\Z004RERK\\Desktop\\app\\siemens-frontend-bootcamp\\app\\src\\app\\validations\\barcode-validator.ts"],"sourcesContent":["import {\r\n  AbstractControl,\r\n  ValidationErrors,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\nexport function barcodeValidator(): ValidatorFn {\r\n  var validationFunction = (\r\n    control: AbstractControl\r\n  ): ValidationErrors | null => {\r\n    const value = control.value;\r\n\r\n    if (!value) return null;\r\n\r\n    const hasUpperCase = /[A-Z]+/.test(value);\r\n    const hasLowerCase = /[a-z]+/.test(value);\r\n    const hasNumeric = /[0-9]+/.test(value);\r\n\r\n    const isValid = hasUpperCase && hasLowerCase && hasNumeric;\r\n\r\n    return isValid ? null : { barcodeFormat: true };\r\n  };\r\n\r\n  return validationFunction;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}