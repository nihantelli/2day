{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { barcodeValidator } from '../../validations/barcode-validator';\nimport { PublishStartEndDataValidator } from '../../validations/publish-start-end-date-validator';\nimport { ExistProductNameValidator } from 'src/app/validations/exist-product-name-validator';\nlet ReactiveFormsComponent = class ReactiveFormsComponent {\n  constructor(formBuilder, postService) {\n    this.formBuilder = formBuilder;\n    this.postService = postService;\n    this.newProduct = undefined;\n    this.productForm = this.formBuilder.group({\n      name: ['', {\n        Validators: [Validators.required, Validators.minLength(5)],\n        asyncValidators: [ExistProductNameValidator(this.postService)],\n        updateOn: 'submit'\n      }],\n      price: ['', [Validators.required, Validators.min(100), Validators.max(1000)]],\n      stock: ['', [Validators.required, Validators.min(10), Validators.max(50)]],\n      category: ['', Validators.required],\n      publish: ['2'],\n      isPublish: [false],\n      barcode: ['', [Validators.required, barcodeValidator()]],\n      publishStartDate: [new Date(), [Validators.required]],\n      publishEndDate: [new Date(), [Validators.required]]\n    }, {\n      validators: PublishStartEndDataValidator(),\n      updateOn: 'blur'\n    });\n    this.categoryMenuList = [{\n      id: 1,\n      text: 'kalemler'\n    }, {\n      id: 2,\n      text: 'Defterler'\n    }, {\n      id: 3,\n      text: 'Silgiler'\n    }];\n    this.publishMenulist = [{\n      id: 1,\n      text: '3 ay'\n    }, {\n      id: 2,\n      text: '6 ay'\n    }, {\n      id: 3,\n      text: '9 ay'\n    }];\n    this.postService.searchByProductName('sunt').subscribe(x => {\n      console.log(x.length);\n    });\n    this.productForm.get('barcode')?.valueChanges.subscribe(x => {\n      console.log(x);\n    });\n  }\n  save() {\n    this.newProduct = this.productForm.value;\n    console.log(this.newProduct);\n  }\n  isInvalid(controlName) {\n    let control = this.productForm.get(controlName);\n    if (!(control.invalid && (control.dirty || control.touched))) return false;\n    if (control.errors?.['required']) return true;\n    if (control.errors?.['minlength']) return true;\n    if (control.errors?.['maxlength']) return true;\n    if (control.errors?.['max']) return true;\n    if (control.errors?.['min']) return true;\n    if (control.errors?.['barcodeFormat']) return true;\n    return false;\n  }\n  isValid(controlName) {\n    let control = this.productForm.get(controlName);\n    return control.valid && (control.dirty || control.touched);\n  }\n  getControl(controlName) {\n    return this.productForm.get(controlName);\n  }\n  isInvalidControl(controlName, validationName) {\n    return this.getControl(controlName).errors?.[validationName];\n  }\n};\nReactiveFormsComponent = __decorate([Component({\n  selector: 'app-reactive-forms',\n  templateUrl: './reactive-forms.component.html',\n  styleUrls: ['./reactive-forms.component.css']\n})], ReactiveFormsComponent);\nexport { ReactiveFormsComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","barcodeValidator","PublishStartEndDataValidator","ExistProductNameValidator","ReactiveFormsComponent","constructor","formBuilder","postService","undefined","group","name","required","minLength","asyncValidators","updateOn","price","min","max","stock","category","publish","isPublish","barcode","publishStartDate","Date","publishEndDate","validators","id","text","searchByProductName","subscribe","x","console","log","length","productForm","get","valueChanges","save","newProduct","value","isInvalid","controlName","control","invalid","dirty","touched","errors","isValid","valid","getControl","isInvalidControl","validationName","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Z004RERK\\Desktop\\app\\siemens-frontend-bootcamp\\app\\src\\app\\forms\\reactive-forms\\reactive-forms.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Product } from '../../models/product';\r\nimport { CategoryMenu } from '../../models/category-menu';\r\nimport { PublishMenu } from '../../models/publish-menu';\r\nimport { barcodeValidator } from '../../validations/barcode-validator';\r\nimport { PublishStartEndDataValidator } from '../../validations/publish-start-end-date-validator';\r\nimport { PostService } from './post.service';\r\nimport { ExistProductNameValidator } from 'src/app/validations/exist-product-name-validator';\r\n\r\n@Component({\r\n  selector: 'app-reactive-forms',\r\n  templateUrl: './reactive-forms.component.html',\r\n  styleUrls: ['./reactive-forms.component.css'],\r\n})\r\nexport class ReactiveFormsComponent {\r\n  newProduct: Product | undefined = undefined;\r\n  public productForm = this.formBuilder.group(\r\n    {\r\n      name: [\r\n        '',\r\n        {\r\n          Validators: [Validators.required, Validators.minLength(5)],\r\n          asyncValidators: [ExistProductNameValidator(this.postService)],\r\n          updateOn: 'submit',\r\n        },\r\n      ],\r\n      price: [\r\n        '',\r\n        [Validators.required, Validators.min(100), Validators.max(1000)],\r\n      ],\r\n      stock: [\r\n        '',\r\n        [Validators.required, Validators.min(10), Validators.max(50)],\r\n      ],\r\n      category: ['', Validators.required],\r\n      publish: ['2'],\r\n      isPublish: [false],\r\n      barcode: ['', [Validators.required, barcodeValidator()]],\r\n      publishStartDate: [new Date(), [Validators.required]],\r\n      publishEndDate: [new Date(), [Validators.required]],\r\n    },\r\n    { validators: PublishStartEndDataValidator(), updateOn: 'blur' }\r\n  );\r\n\r\n  categoryMenuList: CategoryMenu[] = [\r\n    { id: 1, text: 'kalemler' },\r\n    { id: 2, text: 'Defterler' },\r\n    { id: 3, text: 'Silgiler' },\r\n  ];\r\n\r\n  publishMenulist: PublishMenu[] = [\r\n    { id: 1, text: '3 ay' },\r\n    { id: 2, text: '6 ay' },\r\n    { id: 3, text: '9 ay' },\r\n  ];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private postService: PostService\r\n  ) {\r\n    this.postService.searchByProductName('sunt').subscribe((x) => {\r\n      console.log(x.length);\r\n    });\r\n    this.productForm.get('barcode')?.valueChanges.subscribe((x) => {\r\n      console.log(x);\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this.newProduct = this.productForm.value as Product;\r\n    console.log(this.newProduct);\r\n  }\r\n\r\n  isInvalid(controlName: string): boolean {\r\n    let control = this.productForm.get(controlName)!;\r\n\r\n    if (!(control.invalid && (control.dirty || control.touched))) return false;\r\n\r\n    if (control.errors?.['required']) return true;\r\n    if (control.errors?.['minlength']) return true;\r\n    if (control.errors?.['maxlength']) return true;\r\n    if (control.errors?.['max']) return true;\r\n    if (control.errors?.['min']) return true;\r\n    if (control.errors?.['barcodeFormat']) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  isValid(controlName: string) {\r\n    let control = this.productForm.get(controlName)!;\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  getControl(controlName: string) {\r\n    return this.productForm.get(controlName)!;\r\n  }\r\n\r\n  isInvalidControl(controlName: string, validationName: string) {\r\n    return this.getControl(controlName).errors?.[validationName];\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}